# This is a basic workflow to help you get started with Actions

name: CI HealthcheckAPI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ 9-cloudnative-fusionteams ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      branch:
        description: 'Context branch'     
        required: true
      function_name:
        description: 'Function name'
        required: true
      function_path:
        description: 'Function path'
        required: true

env:
  AZURE_FUNCTIONAPP_NAME: ${{ github.event.inputs.function_name }}  # set this to your application's name
  AZURE_FUNCTIONAPP_PACKAGE_PATH: ${{ github.event.inputs.function_path }}    # set this to the path to your web app project, defaults to the repository root
  DOTNET_VERSION: '6.0.x'              # set this to the dotnet version to use
  
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  DeployAzureFunction:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    environment: rvlabs-dev-env

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.inputs.branch }}
          
      # Azure login via SP
      - name: Azure Login
        uses: Azure/login@v1.4.4
        with:
          creds: ${{ secrets.RVLABS_AZURE_CREDENTIALS }}
          
      - name: Setup DotNet ${{ env.DOTNET_VERSION }} Environment
        uses: actions/setup-dotnet@v2.1.0
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}
          include-prerelease: true

      - name: 'Resolve Project Dependencies Using Dotnet'
        shell: bash
        run: |
          pushd './${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}'
          dotnet build --configuration Release --output ./output
          popd
      
      - name: Azure Functions Action
        uses: Azure/functions-action@v1.4.5
        with:
          # Name of the Azure Function App
          app-name: ${{ env.AZURE_FUNCTIONAPP_NAME }}
          # Path to package or folder. *.zip or a folder to deploy
          package: '${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}/output' # optional, default is .
      
      
